@model eOgren.tblKullanici

@{
    Layout = null;
}

<!DOCTYPE html>
<style>
    #success_message {
        display: none;
    }
</style>
<script>
    $(document).ready(function () {
        $('#contact_form').bootstrapValidator({
            // To use feedback icons, ensure that you use Bootstrap v3.1.0 or later
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                first_name: {
                    validators: {
                        stringLength: {
                            min: 2,
                        },
                        notEmpty: {
                            message: 'Please enter your First Name'
                        }
                    }
                },
                last_name: {
                    validators: {
                        stringLength: {
                            min: 2,
                        },
                        notEmpty: {
                            message: 'Please enter your Last Name'
                        }
                    }
                },
                user_name: {
                    validators: {
                        stringLength: {
                            min: 8,
                        },
                        notEmpty: {
                            message: 'Please enter your Username'
                        }
                    }
                },
                user_password: {
                    validators: {
                        stringLength: {
                            min: 8,
                        },
                        notEmpty: {
                            message: 'Please enter your Password'
                        }
                    }
                },
                confirm_password: {
                    validators: {
                        stringLength: {
                            min: 8,
                        },
                        notEmpty: {
                            message: 'Please confirm your Password'
                        }
                    }
                },
                email: {
                    validators: {
                        notEmpty: {
                            message: 'Please enter your Email Address'
                        },
                        emailAddress: {
                            message: 'Please enter a valid Email Address'
                        }
                    }
                },
                contact_no: {
                    validators: {
                        stringLength: {
                            min: 12,
                            max: 12,
                            notEmpty: {
                                message: 'Please enter your Contact No.'
                            }
                        }
                    },
                    department: {
                        validators: {
                            notEmpty: {
                                message: 'Please select your Department/Office'
                            }
                        }
                    },
                }
            }
        })
            .on('success.form.bv', function (e) {
                $('#success_message').slideDown({ opacity: "show" }, "slow") // Do something ...
                $('#contact_form').data('bootstrapValidator').resetForm();

                // Prevent form submission
                e.preventDefault();

                // Get the form instance
                var $form = $(e.target);

                // Get the BootstrapValidator instance
                var bv = $form.data('bootstrapValidator');

                // Use Ajax to submit form data
                $.post($form.attr('action'), $form.serialize(), function (result) {
                    console.log(result);
                }, 'json');
            });
    });</script>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Yeni Kullanici</title>
    <link href="/Content/Genel/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

    <div class="container">

        <form class="well form-horizontal" action=" " method="post" id="contact_form">
            <fieldset>

                <!-- Form Name -->
                <legend><center><h2><b>Portal Yeni Kullanıcı</b></h2></center></legend><br>

                <!-- Text input-->
                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <p class="control-label col-md-2">Adı</p>
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.EditorFor(model => model.Adi, new { htmlAttributes = new { @class = "form-control", @placeholder = "Adı", @name = "first_name" } })
                            @Html.ValidationMessageFor(model => model.Adi, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <!-- Text input-->
                <div class="form-group">
                    <p class="control-label col-md-2">Soyadı</p>
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.EditorFor(model => model.Soyadi, new { htmlAttributes = new { @class = "form-control", @placeholder = "Soyad", @name = "last_name" } })
                            @Html.ValidationMessageFor(model => model.Soyadi, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <p class="control-label col-md-2">Ünvan</p>
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.EditorFor(model => model.Unvan, new { htmlAttributes = new { @class = "form-control", @placeholder = "Unvan", @name = "Unvan" } })
                            @Html.ValidationMessageFor(model => model.Unvan, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>


                <!-- Öğretmen Öğrenci-->
                <div class="form-group">
                    <label class="control-label col-md-2" style="font-weight:normal;">Kullanıcı Tipi</label>
                    <div class="col-md-4 selectContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                            <select name="department" class="form-control selectpicker">
                                <option value="-1">Kullanıcı Tipini Seçiniz</option>
                                <option value="0">Eğitmen</option>
                                <option value="1">Öğrenci</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Kullanıcı Kodu-->

                <div class="form-group">
                    <p class="control-label col-md-2">Kullanıcı Kodu</p>
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control", @placeholder = "Kullanıcı Kodu", @name = "KullaniciKod" } })
                            @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <!-- Şifre-->
                <div class="form-group">
                    <p class="control-label col-md-2">Şifre</p>
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.EditorFor(model => model.Sifre, new { htmlAttributes = new { @class = "form-control", @placeholder = "Şifre", @name = "Sifre" } })
                            @Html.ValidationMessageFor(model => model.Sifre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <!-- Şifre Doğrula-->
                <div class="form-group">
                    <p class="control-label col-md-2">Şifre Doğrula</p>
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.EditorFor(model => model.Sifre, new { htmlAttributes = new { @class = "form-control", @placeholder = "Şifre Tekrar", @name = "SifreTekrar" } })
                            @Html.ValidationMessageFor(model => model.Sifre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <!-- Email-->
                <div class="form-group">
                    <p class="control-label col-md-2">Mail</p>
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                            @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mail Adresiniz", @name = "Mail" } })
                            @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <!-- Telefon Numarası-->
                <div class="form-group">
                    <p class="control-label col-md-2">Telefon Numaranız</p>
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-earphone"></i></span>
                            @Html.EditorFor(model => model.TelefonNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "(532)", @name = "Telefon" } })
                            @Html.ValidationMessageFor(model => model.TelefonNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <!-- Select Basic -->
                <!-- Success message -->
                <div class="alert alert-success" role="alert" id="success_message">Eklendi <i class="glyphicon glyphicon-thumbs-up"></i> Başarılı</div>

                <!-- Button -->
                <div class="form-group">
                    <label class="col-md-2 control-label"></label>
                    <div class="col-md-2">
                        <br><button type="submit" class="btn btn-success">Kayıt Ol <span class="glyphicon glyphicon-send"></span></button>
                      
                        @Html.ActionLink("Vazgeç", "eOgren", new {  },new { @class = "btn btn-warning", @style="width:94px;" })
                    </div>
                </div>

            </fieldset>
        </form>

    </div><!-- /.container -->

    <div>
    </div>
</body>
</html>
